// <auto-generated />
using System;
using System.Diagnostics.CodeAnalysis;
using CashTrackr.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CashTrackr.Migrations;

[ExcludeFromCodeCoverage]
[DbContext(typeof(EfAdapterContext))]
partial class EfAdapterContextModelSnapshot : ModelSnapshot
{
    protected override void BuildModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder
            .HasAnnotation("ProductVersion", "8.0.16")
            .HasAnnotation("Relational:MaxIdentifierLength", 128);

        SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

        modelBuilder.Entity("CashTrackr.Domain.Transactions.Transaction", b =>
            {
                b.Property<int>("Id")
                    .ValueGeneratedOnAdd()
                    .HasColumnType("int");

                SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                b.Property<DateOnly>("Date")
                    .HasColumnType("date");

                b.Property<int>("Type")
                    .HasColumnType("int");

                b.HasKey("Id");

                b.ToTable("Transactions");
            });

        modelBuilder.Entity("CashTrackr.Domain.Transactions.Transaction", b =>
            {
                b.OwnsOne("CashTrackr.Domain.Transactions.Amount", "Amount", b1 =>
                    {
                        b1.Property<int>("TransactionId")
                            .HasColumnType("int");

                        b1.Property<decimal>("Value")
                            .HasPrecision(18, 2)
                            .HasColumnType("decimal(18,2)")
                            .HasColumnName("Amount");

                        b1.HasKey("TransactionId");

                        b1.ToTable("Transactions");

                        b1.WithOwner()
                            .HasForeignKey("TransactionId");
                    });

                b.Navigation("Amount")
                    .IsRequired();
            });
#pragma warning restore 612, 618
    }
}
